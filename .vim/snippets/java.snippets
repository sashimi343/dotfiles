snippet main
	public static void main(String args[]) {
		${1:/* code */}
	}
snippet pu
	public 
snippet pro
	protected 
snippet pr
	private 
snippet st
	static 
snippet fi
	final 
snippet ab
	abstract 
snippet ret
	return 
snippet br
	break;
snippet de
	default:
		${1:/* code */}
		break;
snippet try
	try	{
		${1:/* code */}
	}
snippet ca
	catch(${1:Exception} ${2:e})${3}
snippet fin
	finally {
		${1:/* code */}
	}
snippet th
	throw new ${1:Exception}(${2})${3}
snippet sy
	synchronized 
snippet pa
	package ${1:package};${2}
snippet im
	import 
snippet j.u
	java.util.
snippet j.i
	java.io.
snippet j.b
	java.beans.
snippet j.n
	java.net.
snippet j.m
	java.math.
snippet if
	if(${1:/* condition */}) {
		${2:/* code */}
	}
snippet el
	else {
		${1:/* code */}
	}
snippet elif
	else if(${1:/* condition */}) {
		${2:/* code */}
	}
snippet wh
	while(${1:/* condition */}) {
		${2:/* code */}
	}
snippet for
	for(${1:/* pre */}; ${2:/* condition */}; ${3:/* post */}) {
		${4:/* code */}
	}
snippet fore
	for(${1:String} ${2:s} : ${3:array}) {
		${4:/* code */}
	}
snippet sw
	switch(${1}) {
	${2:/* code */}
	}
snippet cs
	case ${1:/* label */}:
		${2:/* code */}
		break;
snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase} {
		${3:/* code */}
	}
snippet t
	public void test${1:Name}() throws ${2:Exception} {
		${3:/* code */}
	}
snippet cl
	class ${1:`Filename("", "untitled")`}${2} {
		${3:/* code */}
	}
snippet in
	interface ${1:`Filename("", "untitled")`}${2} {
		${3:/* code */}
	}
snippet imp
	implements ${1:Interface}
snippet ex
	extends ${1:Parent}
snippet m
	${1:void} ${2:method}(${3}) {
		${4:/* code */}
	}
snippet v
	${1:String} ${2:var}${3: = null};${4}
snippet vv
	${1:String} ${2:var} = new $1(${3});${4}
snippet co
	public static final ${1:String} ${2:var} = ${3};${4}
snippet cos
	public static final String ${1:var} = "${2}";${3}
snippet as
	assert ${1:test} : "${2:Failure message}";${3}
snippet print
	System.out.println(${1:"Hello, Java!!"});${2}
